

1497048717.702395858  Node Startup
1497048720.123718023 INFO [rosapi_node:184(<module>) [topics: /rosout] Rosapi started
1497048720.161259853 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout] (INFO) General: Waiting for messages.
1497048720.172508955 INFO [rosbridge_websocket:141(<module>) [topics: /rosout] Rosbridge WebSocket server started on port 60446
1497048748.048070054 WARN [/tmp/binarydeb/ros-indigo-kdl-parser-1.11.11/src/kdl_parser.cpp:196(treeFromUrdfModel) [topics: /rosout] The root link world_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
1497048748.023344622 INFO [/home/ccc_v1_w_dd4cc_18220/asn13529_Project_5/asn13530_Project_4/work/catkin_ws/src/robot_sim/src/robot_sim_bringup.cpp:100(main) [topics: /rosout, /joint_states] Simulated robot spinning
1497048748.450100580 INFO [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:932() [topics: /rosout] No root/virtual joint specified in SRDF. Assuming fixed joint
1497048748.451527250 WARN [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:634() [topics: /rosout] Could not identify parent group for end-effector 'end_effector'
1497048748.451721764 WARN [/tmp/binarydeb/ros-indigo-kdl-parser-1.11.11/src/kdl_parser.cpp:196(treeFromUrdfModel) [topics: /rosout] The root link world_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
1497048748.509154894 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:318(PlanningSceneMonitor::startPublishingPlanningScene) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Publishing maintained planning scene on 'monitored_planning_scene'
1497048748.530933677 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-move-group-0.7.9/src/move_group.cpp:193(main) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] MoveGroup debug mode is OFF
1497048748.530968884 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:885(PlanningSceneMonitor::startSceneMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Starting scene monitor
1497048748.539395753 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:891(PlanningSceneMonitor::startSceneMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Listening to '/planning_scene'
1497048748.539444318 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:962(PlanningSceneMonitor::startWorldGeometryMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Starting world geometry monitor
1497048748.548108238 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:978(PlanningSceneMonitor::startWorldGeometryMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Listening to '/collision_object' using message notifier with target frame '/world_link '
1497048748.556726296 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:993(PlanningSceneMonitor::startWorldGeometryMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Listening to '/planning_scene_world' for planning scene world geometry
1497048748.557688298 WARN [/tmp/binarydeb/ros-indigo-moveit-ros-perception-0.7.9/occupancy_map_monitor/src/occupancy_map_monitor.cpp:73(OccupancyMapMonitor::initialize) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Resolution not specified for Octomap. Assuming resolution = 0.1 instead
1497048748.586226966 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_scene_monitor/src/planning_scene_monitor.cpp:1055(PlanningSceneMonitor::startStateMonitor) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Listening to '/attached_collision_object' for attached collision objects
1497048748.654157583 INFO [/tmp/binarydeb/ros-indigo-moveit-planners-ompl-0.7.9/ompl_interface/src/ompl_interface.cpp:53(OMPLInterface::OMPLInterface) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene] Initializing OMPL interface using ROS parameters
1497048748.739839587 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:119(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning interface 'OMPL'
1497048748.779017802 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_workspace_bounds.cpp:53(FixWorkspaceBounds::FixWorkspaceBounds) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'default_workspace_bounds' was not set. Using default value: 10
1497048748.779928849 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_start_state_bounds.cpp:60(FixStartStateBounds::FixStartStateBounds) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'start_state_max_bounds_error' was set to 0.1
1497048748.780790604 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_start_state_bounds.cpp:65(FixStartStateBounds::FixStartStateBounds) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'start_state_max_dt' was not set. Using default value: 0.5
1497048748.781662168 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_start_state_collision.cpp:57(FixStartStateCollision::FixStartStateCollision) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'start_state_max_dt' was not set. Using default value: 0.5
1497048748.782545272 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_start_state_collision.cpp:68(FixStartStateCollision::FixStartStateCollision) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'jiggle_fraction' was set to 0.05
1497048748.783371595 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_request_adapter_plugins/src/fix_start_state_collision.cpp:73(FixStartStateCollision::FixStartStateCollision) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Param 'max_sampling_attempts' was not set. Using default value: 100
1497048748.783441526 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:163(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning request adapter 'Add Time Parameterization'
1497048748.783467102 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:163(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning request adapter 'Fix Workspace Bounds'
1497048748.783483632 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:163(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning request adapter 'Fix Start State Bounds'
1497048748.783512657 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:163(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning request adapter 'Fix Start State In Collision'
1497048748.783535844 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-0.7.9/planning_pipeline/src/planning_pipeline.cpp:163(PlanningPipeline::configure) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates] Using planning request adapter 'Fix Start State Path Constraints'
1497048749.098597610 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-move-group-0.7.9/src/move_group.cpp:159(MoveGroupExe::configureCapabilities) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates, /move_group/display_planned_path, /move_group/display_contacts, /execute_trajectory/result, /execute_trajectory/feedback, /execute_trajectory/status, /move_group/result, /move_group/feedback, /move_group/status, /pickup/result, /pickup/feedback, /pickup/status, /place/result, /place/feedback, /place/status] 

********************************************************
* MoveGroup using: 
*     - ApplyPlanningSceneService
*     - ClearOctomapService
*     - CartesianPathService
*     - ExecuteTrajectoryService
*     - ExecuteTrajectoryAction
*     - GetPlanningSceneService
*     - KinematicsService
*     - MoveAction
*     - PickPlaceAction
*     - MotionPlanService
*     - QueryPlannersService
*     - StateValidationService
********************************************************

1497048749.477476043 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout, /control_markers/tunneled/update] (INFO) General: Receiving messages.
1497048749.477518280 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout, /control_markers/tunneled/update] (INFO) /marker_control_3042_1497048748704: Waiting for init message.
1497048749.593194971 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout, /control_markers/tunneled/update] (INFO) /marker_control_3042_1497048748704: Init message received.
1497048749.606154142 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout, /control_markers/tunneled/update] (INFO) /marker_control_3042_1497048748704: Receiving updates.
1497048771.843719005 INFO [websocket_handler.py:74(open) [topics: /rosout] Client connected.  1 clients total.
1497048772.336931943 INFO [protocol.py:367(log) [topics: /tf2_web_republisher/cancel, /tf2_web_republisher/goal, /rosout, /tf2_web_republisher/feedback] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.352766036 INFO [protocol.py:367(log) [topics: /tf2_web_republisher/cancel, /tf2_web_republisher/goal, /visualization_marker_array, /rosout, /tf2_web_republisher/feedback] [Client 0] Subscribed to /visualization_marker_array
1497048772.365236043 INFO [protocol.py:367(log) [topics: /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /control_markers/tunneled/update
1497048772.385636915 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:89(getInit) [topics: /rosout, /control_markers/tunneled/update] Init requested.
1497048772.883948087 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.897866964 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.901905059 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.905852079 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.909818887 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.913778066 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048772.917731046 INFO [protocol.py:367(log) [topics: /control_markers/feedback, /visualization_marker_array, /tf2_web_republisher/feedback, /rosout, /control_markers/tunneled/update, /tf2_web_republisher/cancel, /tf2_web_republisher/goal] [Client 0] Subscribed to /tf2_web_republisher/feedback
1497048809.700651807 INFO [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:89() [topics: /rosout] Loading robot model 'lwr'...
1497048809.700691707 INFO [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:932() [topics: /rosout] No root/virtual joint specified in SRDF. Assuming fixed joint
1497048809.755413883 WARN [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:634() [topics: /rosout] Could not identify parent group for end-effector 'end_effector'
1497048809.840544852 INFO [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:89() [topics: /rosout] Loading robot model 'lwr'...
1497048809.840575333 INFO [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:932() [topics: /rosout] No root/virtual joint specified in SRDF. Assuming fixed joint
1497048809.841143063 WARN [/tmp/binarydeb/ros-indigo-moveit-core-0.7.9/robot_model/src/robot_model.cpp:634() [topics: /rosout] Could not identify parent group for end-effector 'end_effector'
1497048809.841241282 WARN [/tmp/binarydeb/ros-indigo-kdl-parser-1.11.11/src/kdl_parser.cpp:196(treeFromUrdfModel) [topics: /rosout] The root link world_link has an inertia specified in the URDF, but KDL does not support a root link with an inertia.  As a workaround, you can add an extra dummy link to your URDF.
1497048810.752480669 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-interface-0.7.9/move_group_interface/src/move_group.cpp:293(planning_interface::MoveGroup::MoveGroupImpl::waitForExecuteActionOrService) [topics: /rosout, /planning_scene, /trajectory_execution_event, /attached_collision_object, /move_group/goal, /move_group/cancel, /pickup/goal, /pickup/cancel, /place/goal, /place/cancel] TrajectoryExecution will use old service capability.
1497048810.752537719 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-planning-interface-0.7.9/move_group_interface/src/move_group.cpp:171(planning_interface::MoveGroup::MoveGroupImpl::MoveGroupImpl) [topics: /rosout, /planning_scene, /trajectory_execution_event, /attached_collision_object, /move_group/goal, /move_group/cancel, /pickup/goal, /pickup/cancel, /place/goal, /place/cancel] Ready to take MoveGroup commands for group lwr_arm.
1497048749.098640114 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-move-group-0.7.9/src/move_group_context.cpp:84(MoveGroupContext::status) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates, /move_group/display_planned_path, /move_group/display_contacts, /execute_trajectory/result, /execute_trajectory/feedback, /execute_trajectory/status, /move_group/result, /move_group/feedback, /move_group/status, /pickup/result, /pickup/feedback, /pickup/status, /place/result, /place/feedback, /place/status] MoveGroup context using planning plugin ompl_interface/OMPLPlanner
1497048749.098651996 INFO [/tmp/binarydeb/ros-indigo-moveit-ros-move-group-0.7.9/src/move_group_context.cpp:85(MoveGroupContext::status) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates, /move_group/display_planned_path, /move_group/display_contacts, /execute_trajectory/result, /execute_trajectory/feedback, /execute_trajectory/status, /move_group/result, /move_group/feedback, /move_group/status, /pickup/result, /pickup/feedback, /pickup/status, /place/result, /place/feedback, /place/status] MoveGroup context initialization complete
1497048850.200006759 WARN [/opt/ros/indigo/include/tf/message_filter.h:354(MessageFilter<M>::testMessage) [topics: /rosout, /move_group/planning_scene_monitor/parameter_descriptions, /move_group/planning_scene_monitor/parameter_updates, /move_group/monitored_planning_scene, /move_group/ompl/parameter_descriptions, /move_group/ompl/parameter_updates, /move_group/display_planned_path, /move_group/display_contacts, /execute_trajectory/result, /execute_trajectory/feedback, /execute_trajectory/status, /move_group/result, /move_group/feedback, /move_group/status, /pickup/result, /pickup/feedback, /pickup/status, /place/result, /place/feedback, /place/status] MessageFilter [target=/world_link ]: Discarding message from [/marker_control_3042_1497048748704] due to empty frame_id.  This message will only print once.
1497048868.840145748 INFO [/tmp/binarydeb/ros-indigo-interactive-marker-proxy-0.1.2/src/proxy.cpp:143(statusCb) [topics: /rosout, /control_markers/tunneled/update] (INFO) /marker_control_3042_1497048748704: OK
1497052474.753859996 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /control_markers/tunneled/update, /control_markers/feedback, /visualization_marker_array, /rosout, /tf2_web_republisher/feedback] Could not process inbound connection: Internal error processing topic [/control_markers/feedback]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052474.799161911 INFO [websocket_handler.py:109(on_close) [topics: /rosout] Client disconnected. 0 clients total.
1497052475.756720066 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052477.761888027 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052481.770358085 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052489.779989957 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052505.800270080 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052537.834197044 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052601.899838924 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052730.001557111 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497052986.100897073 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497053498.202145099 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
1497054522.300004959 WARN [tcpros_base.py:345(_tcp_server_callback) [topics: /rosout] Could not process inbound connection: [/rosbridge_websocket] is not a publisher of [/control_markers/feedback]. Topics are [['/rosout', 'rosgraph_msgs/Log']]{'message_definition': "# Time/frame info.\nHeader header\n\n# Identifying string. Must be unique in the topic namespace.\nstring client_id\n\n# Feedback message sent back from the GUI, e.g.\n# when the status of an interactive marker was modified by the user.\n\n# Specifies which interactive marker and control this message refers to\nstring marker_name\nstring control_name\n\n# Type of the event\n# KEEP_ALIVE: sent while dragging to keep up control of the marker\n# MENU_SELECT: a menu entry has been selected\n# BUTTON_CLICK: a button control has been clicked\n# POSE_UPDATE: the pose has been changed using one of the controls\nuint8 KEEP_ALIVE = 0\nuint8 POSE_UPDATE = 1\nuint8 MENU_SELECT = 2\nuint8 BUTTON_CLICK = 3\n\nuint8 MOUSE_DOWN = 4\nuint8 MOUSE_UP = 5\n\nuint8 event_type\n\n# Current pose of the marker\n# Note: Has to be valid for all feedback types.\ngeometry_msgs/Pose pose\n\n# Contains the ID of the selected menu entry\n# Only valid for MENU_SELECT events.\nuint32 menu_entry_id\n\n# If event_type is BUTTON_CLICK, MOUSE_DOWN, or MOUSE_UP, mouse_point\n# may contain the 3 dimensional position of the event on the\n# control.  If it does, mouse_point_valid will be true.  mouse_point\n# will be relative to the frame listed in the header.\ngeometry_msgs/Point mouse_point\nbool mouse_point_valid\n\n================================================================================\nMSG: std_msgs/Header\n# Standard metadata for higher-level stamped data types.\n# This is generally used to communicate timestamped data \n# in a particular coordinate frame.\n# \n# sequence ID: consecutively increasing ID \nuint32 seq\n#Two-integer timestamp that is expressed as:\n# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')\n# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')\n# time-handling sugar is provided by the client library\ntime stamp\n#Frame this data is associated with\n# 0: no frame\n# 1: global frame\nstring frame_id\n\n================================================================================\nMSG: geometry_msgs/Pose\n# A representation of pose in free space, composed of postion and orientation. \nPoint position\nQuaternion orientation\n\n================================================================================\nMSG: geometry_msgs/Point\n# This contains the position of a point in free space\nfloat64 x\nfloat64 y\nfloat64 z\n\n================================================================================\nMSG: geometry_msgs/Quaternion\n# This represents an orientation in free space in quaternion form.\n\nfloat64 x\nfloat64 y\nfloat64 z\nfloat64 w\n", 'callerid': '/marker_control_3042_1497048748704', 'tcp_nodelay': '0', 'md5sum': 'ab0f1eee058667e28c19ff3ffc3f4b78', 'topic': '/control_markers/feedback', 'type': 'visualization_msgs/InteractiveMarkerFeedback'}
